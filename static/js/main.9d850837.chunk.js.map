{"version":3,"sources":["components/ImageUploader.js","components/ImagePreview.js","components/ImageEditor.js","components/ImageList.js","App.js","index.js"],"names":["ImageUploader","_ref","setUploadedImage","setUploadedFolder","_jsxs","children","_jsx","type","accept","onChange","async","file","e","target","files","currentImageUrl","URL","createObjectURL","htmlFor","id","webkitdirectory","mozdirectory","filePaths","i","length","push","ImagePreview","uploadedImage","brightness","contrast","filterStyle","filter","concat","src","alt","style","ImageEditor","setBrightness","setContrast","editedImage","setEditedImage","useState","canvasRef","useRef","handleSaveImage","canvas","current","ctx","getContext","image","Image","onload","width","height","drawImage","dataUrl","toDataURL","error","console","useEffect","min","max","value","onClick","ref","display","response","axios","get","responseType","saveAs","data","download","ImageList","images","onImageClick","selectedImage","setSelectedImage","className","map","index","App","React","uploadedFolder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d850837.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ImageUploader({ setUploadedImage, setUploadedFolder }) {\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const currentImageUrl = URL.createObjectURL(file)\r\n    setUploadedImage(currentImageUrl);\r\n    // URL.revokeObjectURL(currentImageUrl);\r\n    if (file && false) {\r\n      const formData = new FormData();\r\n      formData.append('image', file);\r\n      try {\r\n        const response = await axios.post('/api/images/upload/file', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        });\r\n        setUploadedImage(response.data.filePath);\r\n      } catch (error) {\r\n        console.error('Failed to upload image', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlefolderUpload = async (e) => {\r\n    const files = e.target.files;\r\n    const filePaths = [];\r\n    for (let i = 0; i < files.length; i++) {\r\n      const currentImageUrl = URL.createObjectURL(files[i]);\r\n      filePaths.push(currentImageUrl);\r\n      \r\n    };\r\n    setUploadedFolder(filePaths);\r\n    \r\n    if(files && false){\r\n      const formData = new FormData();\r\n      for (let i = 0; i < files.length; i++) {\r\n        formData.append('images', files[i]);\r\n      }\r\n      try{\r\n        const response = await axios.post('/api/images/upload/folder', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        });\r\n        console.log(\"res: \", response);\r\n        console.log(\"e.target.files:\", response.data.filePaths);\r\n        setUploadedFolder(response.data.filePaths)\r\n      } catch (error){\r\n        console.error('Failed to upload image', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* 上傳圖片，onChange:當輸入改變時觸發handleImageUpload函式 */}\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload}  />\r\n      {/* 上傳圖片資料夾 */}\r\n      <div>\r\n        <label htmlFor=\"folderUpload\">上傳圖片資料夾:</label>\r\n        <input \r\n          type=\"file\" \r\n          id=\"folderUpload\" \r\n          webkitdirectory=\"true\" \r\n          mozdirectory=\"true\" \r\n          onChange={handlefolderUpload} \r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUploader;\r\n","import React from 'react';\r\n\r\nfunction ImagePreview({ uploadedImage, brightness, contrast }) {\r\n  const filterStyle = {\r\n    filter: `brightness(${brightness}%) contrast(${contrast}%)`\r\n  };\r\n\r\n  // 使用filter: brightness()跟contrast()動態調整圖片\r\n  return (\r\n    <div>       \r\n      <img src={uploadedImage} alt=\"Preview\" style={filterStyle} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePreview;\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport ImagePreview from './ImagePreview';\r\nimport axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\n\r\nfunction ImageEditor({ uploadedImage, brightness, contrast, setBrightness, setContrast }) {\r\n  // const [brightness, setBrightness] = useState(100);\r\n  // const [contrast, setContrast] = useState(100);\r\n  const [editedImage, setEditedImage] = useState(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const handleBrightnessChange = (e) => setBrightness(e.target.value);\r\n  const handleContrastChange = (e) => setContrast(e.target.value);\r\n\r\n  const handleSaveImage = async () => {\r\n    // console.log(\"uploadedImage\",uploadedImage);\r\n    try {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext('2d');\r\n      const image = new Image();\r\n      image.src = uploadedImage;\r\n\r\n      image.onload = () => {\r\n        canvas.width = image.width;\r\n        canvas.height = image.height;\r\n        ctx.drawImage(image, 0, 0);\r\n\r\n        ctx.filter = `brightness(${brightness}%) contrast(${contrast}%)`;\r\n        ctx.drawImage(image, 0, 0);\r\n        const dataUrl = canvas.toDataURL('image/jpeg');\r\n        setEditedImage(dataUrl);\r\n      // const response = await axios.post('/api/images/edit', {\r\n      //   filePath: uploadedImage,\r\n      //   brightness,\r\n      //   contrast\r\n      // });\r\n      // setEditedImage('http://localhost:5000'+response.data.outputFilePath);\r\n        // setEditedImage(uploadedImage);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to save image', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleDownload = async () => {\r\n    if (editedImage) {\r\n      try {\r\n        const response = await axios.get(editedImage, { responseType: 'blob' });\r\n        saveAs(response.data, 'edited-image.jpg');\r\n      } catch (error) {\r\n        console.error('Failed to download image', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleSaveImage();\r\n  }, [brightness, contrast, uploadedImage]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label>亮度:</label>\r\n        <input id=\"bright\" type=\"range\" min=\"0\" max=\"200\" value={brightness} onChange={handleBrightnessChange} />\r\n      </div>\r\n      <div>\r\n        <label>對比度:</label>\r\n        <input id=\"contrast\" type=\"range\" min=\"0\" max=\"200\" value={contrast} onChange={handleContrastChange} />\r\n      </div>\r\n      <ImagePreview uploadedImage={uploadedImage} brightness={brightness} contrast={contrast} />\r\n      <button onClick={handleSaveImage}>保存圖片</button>\r\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n      {editedImage && (\r\n        <div>\r\n          <button onClick={handleDownload} download=\"edited-image.jpg\">下載圖片</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageEditor;\r\n","// ImageList.js\r\nimport React, { useState } from 'react';\r\nfunction ImageList({ images, onImageClick }) {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  return (\r\n    <div className=\"image-list\">\r\n      {images.map((image, index) => (\r\n        <img key={index} src={image} alt={`Image ${index}`} onClick={() => onImageClick(image)} />\r\n      ))}\r\n      {selectedImage && (\r\n        <div className=\"largeImageContainer\">\r\n          <img id=\"largeImage\" src={selectedImage} alt=\"Large view\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default ImageList;\r\n","import React, { useState } from 'react';\r\nimport ImageUploader from './components/ImageUploader';\r\nimport ImageEditor from './components/ImageEditor';\r\nimport ImageList from './components/ImageList';\r\n\r\nfunction App() {\r\n  const [uploadedImage, setUploadedImage] = React.useState(null);\r\n  const [brightness, setBrightness] = useState(100);\r\n  const [contrast, setContrast] = useState(100);\r\n  const [uploadedFolder, setUploadedFolder] = useState([]);\r\n\r\n  const handleImageUpload = (image) => {\r\n    setUploadedImage(image);\r\n    setBrightness(100);\r\n    setContrast(100);\r\n  };\r\n\r\n  const handleFolderUpload = (images) => {\r\n    setUploadedFolder(images);\r\n  };\r\n\r\n  const handleImageClick = (image) => {\r\n    setUploadedImage(image);\r\n    setBrightness(100);\r\n    setContrast(100);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>圖片編輯器</h1>\r\n      <ImageUploader setUploadedImage={handleImageUpload} setUploadedFolder={handleFolderUpload} />\r\n      {uploadedFolder.length > 0 && <ImageList images={uploadedFolder} onImageClick={handleImageClick} />}\r\n      {uploadedImage && (\r\n          <ImageEditor \r\n            uploadedImage={uploadedImage}\r\n            brightness={brightness}\r\n            contrast={contrast}\r\n            setBrightness={setBrightness}\r\n            setContrast={setContrast}\r\n          />\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}